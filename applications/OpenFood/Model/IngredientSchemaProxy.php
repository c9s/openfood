<?php
/**
 * THIS FILE IS AUTO-GENERATED BY LAZYRECORD,
 * PLEASE DO NOT MODIFY THIS FILE DIRECTLY.
 * 
 * Last Modified: April 20th at 5:26pm
 */
namespace OpenFood\Model;


use LazyRecord;
use LazyRecord\Schema\RuntimeSchema;
use LazyRecord\Schema\Relationship;

class IngredientSchemaProxy extends RuntimeSchema
{

    public static $column_names = array (
  0 => 'name',
  1 => 'scientific_name',
  2 => 'other_names',
  3 => 'name_en',
  4 => 'name_zh_TW',
  5 => 'scientific_name_en',
  6 => 'scientific_name_zh_TW',
  7 => 'other_names_en',
  8 => 'other_names_zh_TW',
  9 => 'id',
);
    public static $column_hash = array (
  'name' => 1,
  'scientific_name' => 1,
  'other_names' => 1,
  'name_en' => 1,
  'name_zh_TW' => 1,
  'scientific_name_en' => 1,
  'scientific_name_zh_TW' => 1,
  'other_names_en' => 1,
  'other_names_zh_TW' => 1,
  'id' => 1,
);
    public static $mixin_classes = array (
  0 => 'LazyRecord\\Schema\\Mixin\\LocalizeMixinSchema',
);
    public static $column_names_include_virtual = array (
  0 => 'name',
  1 => 'scientific_name',
  2 => 'other_names',
  3 => 'name_en',
  4 => 'name_zh_TW',
  5 => 'scientific_name_en',
  6 => 'scientific_name_zh_TW',
  7 => 'other_names_en',
  8 => 'other_names_zh_TW',
  9 => 'id',
);

    const schema_class = 'OpenFood\\Model\\IngredientSchema';
    const collection_class = 'OpenFood\\Model\\IngredientCollection';
    const model_class = 'OpenFood\\Model\\Ingredient';
    const model_name = 'Ingredient';
    const model_namespace = 'OpenFood\\Model';
    const primary_key = 'id';
    const table = 'ingredients';
    const label = 'Ingredient';

    public function __construct()
    {
        /** columns might have closure, so it can not be const */
        $this->columnData      = array( 
  'name' => array( 
      'name' => 'name',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 30,
        ),
    ),
  'scientific_name' => array( 
      'name' => 'scientific_name',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'other_names' => array( 
      'name' => 'other_names',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'name_en' => array( 
      'name' => 'name_en',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 30,
        ),
    ),
  'name_zh_TW' => array( 
      'name' => 'name_zh_TW',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 30,
        ),
    ),
  'scientific_name_en' => array( 
      'name' => 'scientific_name_en',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'scientific_name_zh_TW' => array( 
      'name' => 'scientific_name_zh_TW',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'other_names_en' => array( 
      'name' => 'other_names_en',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'other_names_zh_TW' => array( 
      'name' => 'other_names_zh_TW',
      'attributes' => array( 
          'isa' => 'str',
          'type' => 'varchar',
          'primary' => NULL,
          'length' => 60,
        ),
    ),
  'id' => array( 
      'name' => 'id',
      'attributes' => array( 
          'isa' => 'int',
          'type' => 'int',
          'primary' => true,
          'autoIncrement' => true,
        ),
    ),
);
        $this->columnNames     = array( 
  'id',
  'name',
  'scientific_name',
  'other_names',
  'name_en',
  'name_zh_TW',
  'scientific_name_en',
  'scientific_name_zh_TW',
  'other_names_en',
  'other_names_zh_TW',
);
        $this->primaryKey      = 'id';
        $this->table           = 'ingredients';
        $this->modelClass      = 'OpenFood\\Model\\Ingredient';
        $this->collectionClass = 'OpenFood\\Model\\IngredientCollection';
        $this->label           = 'Ingredient';
        $this->relations       = array( 
  'foods' => \LazyRecord\Schema\Relationship::__set_state(array( 
  'data' => array( 
      'type' => 1,
      'self_column' => 'id',
      'self_schema' => 'OpenFood\\Model\\IngredientSchema',
      'foreign_column' => 'ingredient_id',
      'foreign_schema' => 'OpenFood\\Model\\FoodSchema',
    ),
  'accessor' => 'foods',
  'where' => NULL,
  'orderBy' => array( 
    ),
)),
);
        $this->readSourceId    = 'default';
        $this->writeSourceId    = 'default';
        parent::__construct();
    }


    /**
     * Code block for message id parser.
     */
    private function __() {
        _('Ingredient');
    }

}
